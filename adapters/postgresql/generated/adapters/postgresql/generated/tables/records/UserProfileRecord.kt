/*
 * This file is generated by jOOQ.
 */
package adapters.postgresql.generated.tables.records


import adapters.postgresql.generated.tables.UserProfile

import java.time.LocalDate
import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserProfileRecord private constructor() : UpdatableRecordImpl<UserProfileRecord>(UserProfile.USER_PROFILE) {

    open var id: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var email: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var password: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var firstName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var birthdayDate: LocalDate?
        set(value): Unit = set(4, value)
        get(): LocalDate? = get(4) as LocalDate?

    open var createTime: OffsetDateTime
        set(value): Unit = set(5, value)
        get(): OffsetDateTime = get(5) as OffsetDateTime

    open var updateTime: OffsetDateTime
        set(value): Unit = set(6, value)
        get(): OffsetDateTime = get(6) as OffsetDateTime

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised UserProfileRecord
     */
    constructor(id: String, email: String, password: String, firstName: String? = null, birthdayDate: LocalDate? = null, createTime: OffsetDateTime, updateTime: OffsetDateTime): this() {
        this.id = id
        this.email = email
        this.password = password
        this.firstName = firstName
        this.birthdayDate = birthdayDate
        this.createTime = createTime
        this.updateTime = updateTime
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised UserProfileRecord
     */
    constructor(value: adapters.postgresql.generated.tables.pojos.UserProfile?): this() {
        if (value != null) {
            this.id = value.id
            this.email = value.email
            this.password = value.password
            this.firstName = value.firstName
            this.birthdayDate = value.birthdayDate
            this.createTime = value.createTime
            this.updateTime = value.updateTime
            resetChangedOnNotNull()
        }
    }
}
