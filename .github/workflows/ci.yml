name: CD

on: push

jobs:
  publish_image:
    runs-on: self-hosted

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üîé The name of your branch is ${{ github.ref }}"

      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üì¶ üê≥ Docker image build and push
        run: ./gradlew jib

  deploy:
    runs-on: self-hosted
    needs: publish_image
    env:
      JDBC_URL: ${{ secrets.JDBC_URL }}
      JDBC_USERNAME: ${{ secrets.JDBC_USERNAME }}
      JDBC_PASSWORD: ${{ secrets.JDBC_PASSWORD }}
      JWT_DOMAIN: ${{ secrets.JWT_DOMAIN }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      deploy_script: |
        # Clean old images
        docker container prune -f
        docker image prune -f

        # Start
        if [[ -n "$(docker ps -a -q)" ]]; then docker stop $(docker ps -a -q); fi

        docker pull utrobin/koschei
        docker run -d --restart always -p 50051:50051 \
        -e JDBC_URL="${{ secrets.JDBC_URL }}" \
        -e JDBC_USERNAME="${{ secrets.JDBC_USERNAME }}" \
        -e JDBC_PASSWORD="${{ secrets.JDBC_PASSWORD }}" \
        -e JWT_DOMAIN="${{ secrets.JWT_DOMAIN }}" \
        -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
        utrobin/koschei

        echo Container updated successfully.

    steps:
      - name: üöÄ Deploy to server Svarog via SSH action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST_KOSCHEI }}
          username: "koschei"
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          script: ${{ env.deploy_script }}